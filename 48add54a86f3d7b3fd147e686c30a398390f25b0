{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e8ef8bed_bc115a1c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-03-13T18:59:21Z",
      "side": 1,
      "message": "This is about correctness, however. If something is writing invalid OBUs we\u0027d prefer it to fail. I\u0027ll need to check the spec documentation around this.",
      "revId": "48add54a86f3d7b3fd147e686c30a398390f25b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "165ac594_d9e40153",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1253028
      },
      "writtenOn": "2024-03-14T01:19:40Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "e8ef8bed_bc115a1c",
      "revId": "48add54a86f3d7b3fd147e686c30a398390f25b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b1462dd_2d391e9b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-03-13T19:16:46Z",
      "side": 1,
      "message": "What streams are causing an issue?",
      "revId": "48add54a86f3d7b3fd147e686c30a398390f25b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "645cc2df_6341a4a4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1253028
      },
      "writtenOn": "2024-03-14T01:19:40Z",
      "side": 1,
      "message": "Zoom reported that their AV1 decoding is blocked by the new libgav1 usage, and they argued that the obu extension flag should not be an error violation to the decode job to be stopped. What they\u0027d used before was libaom which is OK to continue decoding, and other video players are OK to go on with their playback. I made this CL because we should provide more fault tolerance and compatibility, and provide spec violation info to the log.",
      "parentUuid": "5b1462dd_2d391e9b",
      "revId": "48add54a86f3d7b3fd147e686c30a398390f25b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6886455e_c1b6f2ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-03-14T22:14:06Z",
      "side": 1,
      "message": "\u003e Zoom reported that their AV1 decoding is blocked by the new libgav1 usage, and they argued that the obu extension flag should not be an error violation to the decode job to be stopped. What they\u0027d used before was libaom which is OK to continue decoding, and other video players are OK to go on with their playback. I made this CL because we should provide more fault tolerance and compatibility, and provide spec violation info to the log.\n\nWhat is generating the Zoom streams? Compatibility is fine for Chrome integration as support has already been deployed. Having failures is helpful, because it would be good to correct the encoders.",
      "parentUuid": "645cc2df_6341a4a4",
      "revId": "48add54a86f3d7b3fd147e686c30a398390f25b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "780de11f_4bc81781",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-03-14T22:14:51Z",
      "side": 1,
      "message": "\u003e \u003e Zoom reported that their AV1 decoding is blocked by the new libgav1 usage, and they argued that the obu extension flag should not be an error violation to the decode job to be stopped. What they\u0027d used before was libaom which is OK to continue decoding, and other video players are OK to go on with their playback. I made this CL because we should provide more fault tolerance and compatibility, and provide spec violation info to the log.\n\u003e \n\u003e What is generating the Zoom streams? Compatibility is fine for Chrome integration as support has already been deployed. Having failures is helpful, because it would be good to correct the encoders.\n\nIn addition to the question about what\u0027s generating the streams, is there a corresponding Chrome bug from Zoom engineers?",
      "parentUuid": "6886455e_c1b6f2ba",
      "revId": "48add54a86f3d7b3fd147e686c30a398390f25b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f3741b4_1552b524",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1253028
      },
      "writtenOn": "2024-03-15T15:43:02Z",
      "side": 1,
      "message": "Zoom uses proprietary encoder to generate AV1 bitstream and they do not file upstream bug for this combability request. They used to use software decoder successfully to do decoding and playback.",
      "parentUuid": "780de11f_4bc81781",
      "revId": "48add54a86f3d7b3fd147e686c30a398390f25b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3b7024b_fdfd1518",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-03-18T22:28:22Z",
      "side": 1,
      "message": "\u003e Zoom uses proprietary encoder to generate AV1 bitstream and they do not file upstream bug for this combability request. They used to use software decoder successfully to do decoding and playback.\n\nIt would be good to coach them to file bugs so they can be tracked and the information shared a little more easily in cases like this.",
      "parentUuid": "3f3741b4_1552b524",
      "revId": "48add54a86f3d7b3fd147e686c30a398390f25b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bbc3cce7_8e9f048b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1253028
      },
      "writtenOn": "2024-03-19T01:28:15Z",
      "side": 1,
      "message": "Sure, will do.",
      "parentUuid": "d3b7024b_fdfd1518",
      "revId": "48add54a86f3d7b3fd147e686c30a398390f25b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1a8eef3_7ff33597",
        "filename": "src/obu_parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 493,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-03-13T19:04:35Z",
      "side": 1,
      "message": "This is the requirement from the spec.",
      "revId": "48add54a86f3d7b3fd147e686c30a398390f25b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f4a7b6c_736e8faa",
        "filename": "src/obu_parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 493,
      "author": {
        "id": 1253028
      },
      "writtenOn": "2024-03-14T01:19:40Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "f1a8eef3_7ff33597",
      "revId": "48add54a86f3d7b3fd147e686c30a398390f25b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}